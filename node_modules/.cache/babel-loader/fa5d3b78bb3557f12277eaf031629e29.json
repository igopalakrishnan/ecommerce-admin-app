{"ast":null,"code":"import { productConstants } from \"../actions/constants\";\nconst initialState = {\n  products: [],\n  loading: false\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case productConstants.GET_ALL_PRODUCT_SUCCESS:\n      state = { ...state,\n        products: action.payload.products\n      };\n      break;\n\n    /*  case productConstants.ADD_NEW_PRODUCT_FAILURE:\n         state = {\n             ...state,\n             loading: true\n         }\n         break;\n     case productConstants.ADD_NEW_PRODUCT_SUCCESS:\n         state = {\n             ...state,\n             products: action.payload.product,\n             loading: false\n         }\n         break;\n     case productConstants.ADD_NEW_PRODUCT_FAILURE:\n         state = {\n             ...initialState\n         }\n         break; */\n  }\n\n  return state;\n});","map":{"version":3,"sources":["/Users/gokul/Documents/M/mern-ecommerce/admin-app/src/reducers/product.reducer.js"],"names":["productConstants","initialState","products","loading","state","action","type","GET_ALL_PRODUCT_SUCCESS","payload"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,sBAAjC;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,OAAO,EAAE;AAFQ,CAArB;AAKA,gBAAe,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,gBAAgB,CAACO,uBAAtB;AACIH,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJF,QAAAA,QAAQ,EAAEG,MAAM,CAACG,OAAP,CAAeN;AAFrB,OAAR;AAIA;;AACL;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBI;;AA2BA,SAAOE,KAAP;AACH,CA7BD","sourcesContent":["import { productConstants } from \"../actions/constants\";\n\n\nconst initialState = {\n    products: [],\n    loading: false\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case productConstants.GET_ALL_PRODUCT_SUCCESS:\n            state = {\n                ...state,\n                products: action.payload.products\n            }\n            break;\n       /*  case productConstants.ADD_NEW_PRODUCT_FAILURE:\n            state = {\n                ...state,\n                loading: true\n            }\n            break;\n        case productConstants.ADD_NEW_PRODUCT_SUCCESS:\n            state = {\n                ...state,\n                products: action.payload.product,\n                loading: false\n            }\n            break;\n        case productConstants.ADD_NEW_PRODUCT_FAILURE:\n            state = {\n                ...initialState\n            }\n            break; */\n    }\n\n    return state;\n}"]},"metadata":{},"sourceType":"module"}