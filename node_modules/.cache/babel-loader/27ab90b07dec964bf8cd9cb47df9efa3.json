{"ast":null,"code":"import axios from 'axios';\nimport { api } from '../urlConfig';\nimport store from '../store';\nimport { authConstants } from '../actions/constants';\nconst token = window.localStorage.getItem('token');\nconst axiosIntance = axios.create({\n  baseURL: api,\n  headers: {\n    'Authorization': token ? `Bearer ${token}` : ''\n  }\n});\n/* JWT expires to go signin page */\n\n/* axiosIntance.interceptors.request.use((req) => {\n    const { auth } = store.getState();\n    if(auth.token) {\n        req.headers.Authorization = `Bearer ${auth.token}`\n    }\n    return req;\n})\n\naxiosIntance.interceptors.response.use((res) => {\n    return res;\n}, (error) => {\n    console.log(error.response);\n    const { status } = error.response;\n    if(status === 500) {\n        localStorage.clear();\n        store.dispatch({ type: authConstants.LOGOUT_SUCCESS });\n    }\n    return Promise.reject(error);\n}) */\n\nexport default axiosIntance;","map":{"version":3,"sources":["/Users/gokul/Documents/M/mern-ecommerce/admin-app/src/helpers/axios.js"],"names":["axios","api","store","authConstants","token","window","localStorage","getItem","axiosIntance","create","baseURL","headers"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AAEA,MAAMC,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAd;AAEA,MAAMC,YAAY,GAAGR,KAAK,CAACS,MAAN,CAAa;AAE9BC,EAAAA,OAAO,EAAET,GAFqB;AAG9BU,EAAAA,OAAO,EAAE;AACL,qBAAiBP,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AADxC;AAHqB,CAAb,CAArB;AAQA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAeI,YAAf","sourcesContent":["import axios from 'axios';\nimport { api } from '../urlConfig';\nimport store from '../store';\nimport { authConstants } from '../actions/constants';\n\nconst token = window.localStorage.getItem('token');\n\nconst axiosIntance = axios.create({\n\n    baseURL: api,\n    headers: {\n        'Authorization': token ? `Bearer ${token}` : ''\n    }\n});\n\n/* JWT expires to go signin page */\n\n/* axiosIntance.interceptors.request.use((req) => {\n    const { auth } = store.getState();\n    if(auth.token) {\n        req.headers.Authorization = `Bearer ${auth.token}`\n    }\n    return req;\n})\n\naxiosIntance.interceptors.response.use((res) => {\n    return res;\n}, (error) => {\n    console.log(error.response);\n    const { status } = error.response;\n    if(status === 500) {\n        localStorage.clear();\n        store.dispatch({ type: authConstants.LOGOUT_SUCCESS });\n    }\n    return Promise.reject(error);\n}) */\n\n\nexport default axiosIntance;"]},"metadata":{},"sourceType":"module"}