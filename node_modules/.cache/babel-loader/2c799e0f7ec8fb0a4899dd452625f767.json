{"ast":null,"code":"import axios from '../helpers/axios';\nimport { categoryConstants } from './constants';\nexport const getAllCategory = () => {\n  return async dispatch => {\n    dispatch({\n      type: categoryConstants.GET_ALL_CATEGORIES_REQUEST\n    });\n    const res = await axios.get('category/getcategory');\n    console.log(res);\n\n    if (res.status === 200) {\n      const {\n        categoryList\n      } = res.data;\n      dispatch({\n        type: categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\n        payload: {\n          categories: categoryList\n        }\n      });\n    } else {\n      dispatch({\n        type: categoryConstants.GET_ALL_CATEGORIES_FAILURE,\n        payload: {\n          error: res.data.error\n        }\n      });\n    }\n  };\n};\nexport const addCategory = form => {\n  return async dispatch => {\n    dispatch({\n      type: categoryConstants.ADD_NEW_CATEGORY_REQUEST\n    });\n\n    try {\n      const res = await axios.post(`/category/create`, form);\n      console.log(res);\n\n      if (res.status === 201) {\n        dispatch({\n          type: categoryConstants.ADD_NEW_CATEGORY_SUCCESS,\n          payload: {\n            category: res.data.category\n          }\n        });\n      } else {\n        dispatch({\n          type: categoryConstants.ADD_NEW_CATEGORY_FAILURE,\n          payload: res.data.error\n        });\n      }\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n};\nexport const updateCategories = form => {\n  return async dispatch => {\n    dispatch({\n      type: categoryConstants.UPDATE_CATEGORIES_REQUEST\n    });\n    const res = await axios.post(`/category/update`, form);\n\n    if (res.status === 201) {\n      return true;\n      console.log(res);\n    } else {\n      console.log(res);\n    }\n  };\n};\nexport const deleteCategories = ids => {\n  return async dispatch => {\n    const res = await axios.post(`/category/delete`, {\n      payload: {\n        ids\n      }\n    });\n\n    if (res.status === 201) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n};","map":{"version":3,"sources":["/Users/gokul/Documents/M/mern-ecommerce/admin-app/src/actions/catogory.action.js"],"names":["axios","categoryConstants","getAllCategory","dispatch","type","GET_ALL_CATEGORIES_REQUEST","res","get","console","log","status","categoryList","data","GET_ALL_CATEGORIES_SUCCESS","payload","categories","GET_ALL_CATEGORIES_FAILURE","error","addCategory","form","ADD_NEW_CATEGORY_REQUEST","post","ADD_NEW_CATEGORY_SUCCESS","category","ADD_NEW_CATEGORY_FAILURE","response","updateCategories","UPDATE_CATEGORIES_REQUEST","deleteCategories","ids"],"mappings":"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","sourcesContent":["import axios from '../helpers/axios';\nimport { categoryConstants } from './constants';\n\nexport const getAllCategory = () => {\n    return async dispatch => {\n\n        dispatch({ type: categoryConstants.GET_ALL_CATEGORIES_REQUEST });\n\n        const res = await axios.get('category/getcategory');\n        console.log(res);\n\n        if (res.status === 200) {\n\n            const { categoryList } = res.data;\n\n            dispatch({\n                type: categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\n                payload: { categories: categoryList }\n            });\n        } else {\n            dispatch({\n                type: categoryConstants.GET_ALL_CATEGORIES_FAILURE,\n                payload: { error: res.data.error }\n            });\n        }\n    }\n}\n\n\nexport const addCategory = (form) => {\n    return async dispatch => {\n\n        dispatch({ type: categoryConstants.ADD_NEW_CATEGORY_REQUEST })\n        try {\n           const res = await axios.post(`/category/create`, form);\n        console.log(res);\n\n        if (res.status === 201) {\n            dispatch({\n                type: categoryConstants.ADD_NEW_CATEGORY_SUCCESS,\n                payload: { category: res.data.category }\n            });\n        }else{\n            dispatch({\n                type: categoryConstants.ADD_NEW_CATEGORY_FAILURE,\n                payload: res.data.error\n            });\n        }\n\n        }catch(error) {\n            console.log(error.response);\n        }\n        \n    }\n}\n\nexport const updateCategories = (form) => {\n    return async dispatch => {\n        dispatch({type: categoryConstants.UPDATE_CATEGORIES_REQUEST})\n        const res = await axios.post(`/category/update`, form);\n        if (res.status === 201) {\n            return true;\n            console.log(res);\n        }else{\n            console.log(res);\n        }\n    }\n}\n\nexport const deleteCategories = (ids) => {\n    return async dispatch => {\n        const res = await axios.post(`/category/delete`, {\n            payload: {\n                ids\n            }\n        });\n        if(res.status === 201) {\n            return true;\n        }else {\n            return false;\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}