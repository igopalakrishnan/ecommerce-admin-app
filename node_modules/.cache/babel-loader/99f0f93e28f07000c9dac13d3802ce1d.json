{"ast":null,"code":"var _jsxFileName = \"/Users/gokul/Documents/M/mern-ecommerce/admin-app/src/containers/NewPage/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Layout from '../../components/Layout';\nimport Modal from '../../components/UI/Modal';\nimport Input from '../../components/UI/Input';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport linearCategories from '../../helpers/linearCategories';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createPage } from '../../actions';\n/**\n* @author\n* @function NewPage\n**/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewPage = props => {\n  _s();\n\n  const [createModal, setCreateModal] = useState(false);\n  const [title, setTitle] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [categoryId, setCategoryId] = useState('');\n  const [desc, setDesc] = useState('');\n  const [type, setType] = useState('');\n  const [banners, setBanners] = useState([]);\n  const [products, setProducts] = useState([]);\n  const category = useSelector(state => state.category);\n  const dispatch = useDispatch();\n  const page = useSelector(state => state.page);\n  useEffect(() => {\n    setCategories(linearCategories(category.categories));\n  }, [category]);\n  useEffect(() => {\n    console.log(page);\n\n    if (!page.loading) {\n      setCreateModal(false);\n      setTitle('');\n      setCategoryId('');\n      setDesc('');\n      setBanners([]);\n      setProducts([]);\n    }\n  }, [page]);\n\n  const onCategoryChange = e => {\n    const category = categories.find(category => category._id == e.target.value);\n    setCategoryId(e.target.value);\n    setType(category.type);\n  };\n\n  const handleBannerImages = e => {\n    console.log(e);\n    setBanners([...banners, e.target.files[0]]);\n  };\n\n  const handleProductImages = e => {\n    console.log(e);\n    setProducts([...products, e.target.files[0]]);\n  };\n\n  const submitPageForm = e => {\n    //e.target.preventDeafult();\n    if (title === '') {\n      alert('title is required');\n      setCreateModal(false);\n      return;\n    }\n\n    const form = new FormData();\n    form.append('title', title);\n    form.append('description', desc);\n    form.append('category', categoryId);\n    form.append('type', type);\n    banners.forEach((banner, index) => {\n      form.append('banners', banner);\n    });\n    products.forEach((product, index) => {\n      form.append('products', product);\n    });\n    dispatch(createPage(form)); //console.log({ title, desc, categoryId, type, banners, products});\n  };\n\n  const renderCreatePageModal = () => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: createModal,\n      modalTitle: 'Create New Page',\n      handleClose: () => setCreateModal(false),\n      onSubmit: submitPageForm,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              value: categoryId,\n              onChange: onCategoryChange,\n              options: categories,\n              placeholder: 'Select Category'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              value: title,\n              onChange: e => setTitle(e.target.value),\n              placeholder: 'Page Title',\n              className: \"form-control-sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              value: desc,\n              onChange: e => setDesc(e.target.value),\n              placeholder: 'Page Desc',\n              className: \"form-control-sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), banners.length > 0 ? banners.map((banner, index) => /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: banner.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 37\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 33\n        }, this)) : null, /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              className: \"form-control\",\n              type: \"file\",\n              name: \"banners\",\n              onChange: handleBannerImages\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), products.length > 0 ? products.map((product, index) => /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 37\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 33\n        }, this)) : null, /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              className: \"form-control\",\n              type: \"file\",\n              name: \"products\",\n              onChange: handleProductImages\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    sidebar: true,\n    children: page.loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Page Loading... Please Wait\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [renderCreatePageModal(), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCreateModal(true),\n        children: \"Create Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewPage, \"+nFwicLsNBCIL9WdHLL2qzzESeg=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = NewPage;\nexport default NewPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPage\");","map":{"version":3,"sources":["/Users/gokul/Documents/M/mern-ecommerce/admin-app/src/containers/NewPage/index.js"],"names":["React","useEffect","useState","Layout","Modal","Input","Row","Col","Container","linearCategories","useDispatch","useSelector","createPage","NewPage","props","createModal","setCreateModal","title","setTitle","categories","setCategories","categoryId","setCategoryId","desc","setDesc","type","setType","banners","setBanners","products","setProducts","category","state","dispatch","page","console","log","loading","onCategoryChange","e","find","_id","target","value","handleBannerImages","files","handleProductImages","submitPageForm","alert","form","FormData","append","forEach","banner","index","product","renderCreatePageModal","length","map","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Layout from '../../components/Layout';\nimport Modal from '../../components/UI/Modal';\nimport Input from '../../components/UI/Input';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport linearCategories from '../../helpers/linearCategories';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createPage } from '../../actions';\n\n\n/**\n* @author\n* @function NewPage\n**/\n\nconst NewPage = (props) => {\n\n    const [createModal, setCreateModal] = useState(false);\n    const [title, setTitle] = useState('');\n    const [categories, setCategories] = useState([]);\n    const [categoryId, setCategoryId] = useState('');\n    const [desc, setDesc] = useState('');\n    const [type, setType] = useState('');\n    const [banners, setBanners] = useState([]);\n    const [products, setProducts] = useState([]);\n    const category = useSelector(state => state.category);\n    const dispatch = useDispatch();\n    const page = useSelector(state => state.page);\n\n\n    useEffect(() => {\n        setCategories(linearCategories(category.categories));\n    }, [category]);\n\n    useEffect(() => {\n        console.log(page);\n        if (!page.loading) {\n            setCreateModal(false);\n            setTitle('');\n            setCategoryId('');\n            setDesc('');\n            setBanners([]);\n            setProducts([]);\n        }\n    }, [page]);\n\n    const onCategoryChange = (e) => {\n        const category = categories.find(category => category._id == e.target.value);\n        setCategoryId(e.target.value);\n        setType(category.type);\n    }\n\n    const handleBannerImages = (e) => {\n        console.log(e);\n        setBanners([...banners, e.target.files[0]]);\n    }\n\n    const handleProductImages = (e) => {\n        console.log(e);\n        setProducts([...products, e.target.files[0]]);\n    }\n\n    const submitPageForm = (e) => {\n        //e.target.preventDeafult();\n\n        if (title === '') {\n            alert('title is required');\n            setCreateModal(false);\n            return;\n        }\n\n        const form = new FormData();\n        form.append('title', title);\n        form.append('description', desc);\n        form.append('category', categoryId);\n        form.append('type', type);\n        banners.forEach((banner, index) => {\n            form.append('banners', banner);\n        });\n        products.forEach((product, index) => {\n            form.append('products', product);\n        });\n\n        dispatch(createPage(form));\n        //console.log({ title, desc, categoryId, type, banners, products});\n    }\n\n\n    const renderCreatePageModal = () => {\n        return (\n            <Modal\n                show={createModal}\n                modalTitle={'Create New Page'}\n                handleClose={() => setCreateModal(false)}\n                onSubmit={submitPageForm}\n            >\n\n                <Container>\n                    <Row>\n                        <Col>\n                            {/*  <select\n                                className='form-control form-control-sm'\n                                value={categoryId}\n                                onChange={onCategoryChange}\n                            >\n                                <option value=''>Select Category</option>\n                                {\n                                    categories.map((cat) =>\n                                        <option key={cat._id} value={cat._id}>{cat.name}</option>)\n                                }\n\n                            </select> */}\n\n                            <Input\n                                type=\"select\"\n                                value={categoryId}\n                                onChange={onCategoryChange}\n                                options={categories}\n                                placeholder={'Select Category'}\n                            />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <Input\n                                value={title}\n                                onChange={(e) => setTitle(e.target.value)}\n                                placeholder={'Page Title'}\n                                className='form-control-sm'\n                            />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <Input\n                                value={desc}\n                                onChange={(e) => setDesc(e.target.value)}\n                                placeholder={'Page Desc'}\n                                className='form-control-sm'\n                            />\n                        </Col>\n                    </Row>\n\n                    {\n                        banners.length > 0 ?\n                            banners.map((banner, index) =>\n                                <Row key={index}>\n                                    <Col>{banner.name}</Col>\n                                </Row>\n                            ) : null\n                    }\n\n                    <Row>\n                        <Col>\n                            <Input\n                                className='form-control'\n                                type='file'\n                                name='banners'\n                                onChange={handleBannerImages}\n                            />\n                        </Col>\n                    </Row>\n\n                    {\n                        products.length > 0 ?\n                            products.map((product, index) =>\n                                <Row key={index}>\n                                    <Col>{product.name}</Col>\n                                </Row>\n                            ) : null\n                    }\n\n                    <Row>\n                        <Col>\n                            <Input\n                                className='form-control'\n                                type='file'\n                                name='products'\n                                onChange={handleProductImages}\n                            />\n                        </Col>\n                    </Row>\n\n\n                </Container>\n\n            </Modal>\n        );\n    }\n    return (\n        <Layout sidebar>\n            {\n                page.loading ?\n                    <p>Page Loading... Please Wait</p>\n                    :\n                    <>\n                        {renderCreatePageModal()}\n                        <button onClick={() => setCreateModal(true)}>Create Page</button>\n                    </>\n            }\n\n        </Layout>\n    )\n\n}\n\nexport default NewPage;"]},"metadata":{},"sourceType":"module"}