{"ast":null,"code":"var _jsxFileName = \"/Users/gokul/Documents/M/mern-ecommerce/admin-app/src/containers/Orders/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"; //import { updateOrder } from \"../../actions\";\n\nimport Layout from \"../../components/Layout\";\nimport Card from \"../../components/UI/Card\";\nimport \"./style.css\";\n/**\n * @author\n * @function Orders\n **/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Orders = props => {\n  _s();\n\n  const order = useSelector(state => state.order);\n  const [type, setType] = useState(\"\"); //const dispatch = useDispatch();\n\n  /* const onOrderUpdate = (orderId) => {\n    const payload = {\n      orderId,\n      type,\n    };\n    dispatch(updateOrder(payload));\n  }; */\n\n  /* const formatDate = (date) => {\n    if (date) {\n      const d = new Date(date);\n      return `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`;\n    }\n    return \"\";\n  }; */\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    sidebar: true,\n    children: order.orders.map((orderItem, index) => /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        margin: \"10px 0\"\n      } //key={index}\n      //headerLeft={orderItem._id}\n      ,\n      headerLeft: \"ORDER_ID\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          boxSizing: \"border-box\",\n          padding: \"100px\"\n          /* display: \"flex\",\n          alignItems: \"center\", */\n\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"orderTrack\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"orderStatus\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"point\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"orderInfo\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status\",\n                children: \"Ordered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"date\",\n                children: \"Fri, 2021\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"orderStatus\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"point\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"orderInfo\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status\",\n                children: \"Packed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"date\",\n                children: \"Fri, 2021\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"orderStatus\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"point\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"orderInfo\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status\",\n                children: \"Shipped\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"date\",\n                children: \"Fri, 2021\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"orderStatus\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"point\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"orderInfo\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status\",\n                children: \"Delivered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"date\",\n                children: \"Fri, 2021\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"0 50px\",\n            boxSizing: \"border-box\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => setType(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"select status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this), orderItem.orderStatus.map(status => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: !status.isCompleted ? /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: status.type,\n                  children: status.type\n                }, status.type, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 27\n                }, this) : null\n              }, void 0, false);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Orders, \"imfh96btMTXx4A/RYTQvkx57bc4=\", false, function () {\n  return [useSelector];\n});\n\n_c = Orders;\nexport default Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["/Users/gokul/Documents/M/mern-ecommerce/admin-app/src/containers/Orders/index.js"],"names":["React","useState","useDispatch","useSelector","Layout","Card","Orders","props","order","state","type","setType","orders","map","orderItem","index","margin","boxSizing","padding","e","target","value","orderStatus","status","isCompleted"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n//import { updateOrder } from \"../../actions\";\nimport Layout from \"../../components/Layout\";\nimport Card from \"../../components/UI/Card\";\n\nimport \"./style.css\";\n\n/**\n * @author\n * @function Orders\n **/\n\nconst Orders = (props) => {\n  const order = useSelector((state) => state.order);\n  const [type, setType] = useState(\"\");\n  //const dispatch = useDispatch();\n\n  /* const onOrderUpdate = (orderId) => {\n    const payload = {\n      orderId,\n      type,\n    };\n    dispatch(updateOrder(payload));\n  }; */\n\n  /* const formatDate = (date) => {\n    if (date) {\n      const d = new Date(date);\n      return `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`;\n    }\n    return \"\";\n  }; */\n\n  return (\n    <Layout sidebar>\n      {\n        order.orders.map((orderItem, index) => (\n          <Card\n            style={{\n              margin: \"10px 0\",\n            }}\n            //key={index}\n            //headerLeft={orderItem._id}\n            headerLeft=\"ORDER_ID\"\n          >\n            {/* <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              padding: \"50px 50px\",\n              alignItems: \"center\",\n            }}\n          >\n            <div>\n              <div className=\"title\">Items</div>\n              {orderItem.items.map((item, index) => (\n                <div className=\"value\" key={index}>\n                  {item.productId.name}\n                </div>\n              ))}\n            </div>\n            <div>\n              <span className=\"title\">Total Price</span>\n              <br />\n              <span className=\"value\">{orderItem.totalAmount}</span>\n            </div>\n            <div>\n              <span className=\"title\">Payment Type</span> <br />\n              <span className=\"value\">{orderItem.paymentType}</span>\n            </div>\n            <div>\n              <span className=\"title\">Payment Status</span> <br />\n              <span className=\"value\">{orderItem.paymentStatus}</span>\n            </div>\n          </div> */}\n            <div\n              style={{\n                boxSizing: \"border-box\",\n                padding: \"100px\",\n                /* display: \"flex\",\n                alignItems: \"center\", */\n              }}\n            >\n              <div className='orderTrack'>\n                <div className='orderStatus'>\n                  <div className='point'></div>\n                  <div className='orderInfo'>\n                    <div className='status'>Ordered</div>\n                    <div className='date'>Fri, 2021</div>\n                  </div>\n                </div>\n                <div className='orderStatus'>\n                  <div className='point'></div>\n                  <div className='orderInfo'>\n                    <div className='status'>Packed</div>\n                    <div className='date'>Fri, 2021</div>\n                  </div>\n                </div>\n                <div className='orderStatus'>\n                  <div className='point'></div>\n                  <div className='orderInfo'>\n                    <div className='status'>Shipped</div>\n                    <div className='date'>Fri, 2021</div>\n                  </div>\n                </div>\n                <div className='orderStatus'>\n                  <div className='point'></div>\n                  <div className='orderInfo'>\n                    <div className='status'>Delivered</div>\n                    <div className='date'>Fri, 2021</div>\n                  </div>\n                </div>\n              </div>\n              {/* <div className=\"orderTrack\">\n              {orderItem.orderStatus.map((status) => (\n                <div\n                  className={`orderStatus ${status.isCompleted ? \"active\" : \"\"\n                    }`}\n                >\n                  <div\n                    className={`point ${status.isCompleted ? \"active\" : \"\"}`}\n                  ></div>\n                  <div className=\"orderInfo\">\n                    <div className=\"status\">{status.type}</div>\n                    <div className=\"date\">{formatDate(status.date)}</div>\n                  </div>\n                </div>\n              ))}\n            </div> */}\n\n              {/* select input to apply order action */}\n              <div\n                style={{\n                  padding: \"0 50px\",\n                  boxSizing: \"border-box\",\n                }}\n              >\n                <select onChange={(e) => setType(e.target.value)}>\n                  <option value={\"\"}>select status</option>\n                  {orderItem.orderStatus.map((status) => {\n                    return (\n                      <>\n                        {!status.isCompleted ? (\n                          <option key={status.type} value={status.type}>\n                            {status.type}\n                          </option>\n                        ) : null}\n                      </>\n                    );\n                  })}\n                </select>\n              </div>\n              {/* button to confirm action */}\n\n              {/* <div\n              style={{\n                padding: \"0 50px\",\n                boxSizing: \"border-box\",\n              }}\n            >\n              <button onClick={() => onOrderUpdate(orderItem._id)}>\n                confirm\n              </button>\n            </div> */}\n            </div>\n          </Card>\n        ))\n      }\n    </Layout>\n  );\n};\n\nexport default Orders;"]},"metadata":{},"sourceType":"module"}