{"ast":null,"code":"var _jsxFileName = \"/Users/gokul/Documents/M/mern-ecommerce/admin-app/src/containers/Category/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Layout from '../../components/Layout';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllCategory, addCategory } from '../../actions';\nimport Input from '../../components/UI/Input';\nimport Modal from '../../components/UI/Modal';\nimport CheckboxTree from 'react-checkbox-tree';\nimport { IoIosCheckboxOutline, IoIosCheckbox, IoIosArrowForward, IoIosArrowDown } from 'react-icons/io';\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\n/**\n* @author\n* @function Category\n**/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Category = props => {\n  _s();\n\n  const category = useSelector(state => state.category);\n  const [show, setShow] = useState(false);\n  const [categoryName, setCategoryName] = useState('');\n  const [parentCategoryId, setParentCategoryId] = useState('');\n  const [categoryImage, setCategoryImage] = useState('');\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    const form = new FormData();\n    form.append('name', categoryName);\n    form.append('parentId', parentCategoryId);\n    form.append('categoryImage', categoryImage);\n    dispatch(addCategory(form));\n    setCategoryName('');\n    setParentCategoryId('');\n    /* const cat = {\n        categoryName,\n        categoryImage,\n        parentCategoryId\n    }; */\n    //console.log(cat);\n\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const renderCategories = categories => {\n    let myCategories = [];\n\n    for (let category of categories) {\n      myCategories.push({\n        label: category.name,\n        value: category._id,\n        children: category.children.length > 0 && renderCategories(category.children)\n      });\n    }\n\n    return myCategories;\n  };\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n\n    return options;\n  };\n\n  const handleCategoryImage = e => {\n    setCategoryImage(e.target.files[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    sidebar: true,\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleShow,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(CheckboxTree, {\n            nodes: renderCategories(category.categories),\n            checked: checked,\n            expanded: expanded,\n            onCheck: checked => setChecked(checked),\n            onExpand: expanded => setExpanded(expanded),\n            icons: {\n              check: /*#__PURE__*/_jsxDEV(IoIosCheckbox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 40\n              }, this),\n              uncheck: /*#__PURE__*/_jsxDEV(IoIosCheckboxOutline, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 42\n              }, this),\n              halfCheck: /*#__PURE__*/_jsxDEV(IoIosCheckboxOutline, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 44\n              }, this),\n              expandClose: /*#__PURE__*/_jsxDEV(IoIosArrowForward, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 46\n              }, this),\n              expandOpen: /*#__PURE__*/_jsxDEV(IoIosArrowDown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 45\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      handleClose: handleClose,\n      modalTitle: 'Add New Category',\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        value: categoryName,\n        placeholder: `Category Name`,\n        onChange: e => setCategoryName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        value: parentCategoryId,\n        onChange: e => setParentCategoryId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"select category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: [\" \", option.name]\n        }, option.value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"categoryImage\",\n        onChange: handleCategoryImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Category, \"3ckwP703XYlqZQOLqEARrkPHgA8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Category;\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["/Users/gokul/Documents/M/mern-ecommerce/admin-app/src/containers/Category/index.js"],"names":["React","useEffect","useState","Layout","Container","Row","Col","useDispatch","useSelector","getAllCategory","addCategory","Input","Modal","CheckboxTree","IoIosCheckboxOutline","IoIosCheckbox","IoIosArrowForward","IoIosArrowDown","Category","props","category","state","show","setShow","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","categoryImage","setCategoryImage","checked","setChecked","expanded","setExpanded","dispatch","handleClose","form","FormData","append","handleShow","renderCategories","categories","myCategories","push","label","name","value","_id","children","length","createCategoryList","options","handleCategoryImage","e","target","files","display","justifyContent","check","uncheck","halfCheck","expandClose","expandOpen","map","option"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Layout from '../../components/Layout';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllCategory, addCategory } from '../../actions';\nimport Input from '../../components/UI/Input';\nimport Modal from '../../components/UI/Modal';\nimport CheckboxTree from 'react-checkbox-tree';\nimport {\n    IoIosCheckboxOutline,\n    IoIosCheckbox,\n    IoIosArrowForward,\n    IoIosArrowDown\n} from 'react-icons/io';\n\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\n\n/**\n* @author\n* @function Category\n**/\n\nconst Category = (props) => {\n\n    const category = useSelector(state => state.category);\n    const [show, setShow] = useState(false);\n    const [categoryName, setCategoryName] = useState('');\n    const [parentCategoryId, setParentCategoryId] = useState('');\n    const [categoryImage, setCategoryImage] = useState('');\n    const [checked, setChecked] = useState([]);\n    const [expanded, setExpanded] = useState([]);\n\n\n    const dispatch = useDispatch();\n\n\n\n    const handleClose = () => {\n\n        const form = new FormData();\n\n        form.append('name', categoryName);\n        form.append('parentId', parentCategoryId);\n        form.append('categoryImage', categoryImage);\n        dispatch(addCategory(form));\n        setCategoryName('');\n        setParentCategoryId('');\n\n        /* const cat = {\n            categoryName,\n            categoryImage,\n            parentCategoryId\n        }; */\n\n        //console.log(cat);\n\n        setShow(false);\n    }\n    const handleShow = () => setShow(true);\n\n\n    const renderCategories = (categories) => {\n\n        let myCategories = [];\n\n        for (let category of categories) {\n\n            myCategories.push(\n                {\n                    label: category.name,\n                    value: category._id,\n                    children: category.children.length > 0 && renderCategories(category.children)\n                }\n            )\n        }\n        return myCategories;\n\n    }\n\n\n    const createCategoryList = (categories, options = []) => {\n        for (let category of categories) {\n            options.push({ value: category._id, name: category.name })\n            if (category.children.length > 0) {\n                createCategoryList(category.children, options)\n            }\n        }\n\n        return options;\n    }\n\n\n    const handleCategoryImage = (e) => {\n        setCategoryImage(e.target.files[0]);\n\n    }\n\n    return (\n        <Layout sidebar>\n            <Container>\n                <Row>\n                    <Col md={12}>\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                            <h3>Category</h3>\n                            <button onClick={handleShow}>Add</button>\n                        </div>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col md={12}>\n                        {/* <ul>\n                            {renderCategories(category.categories)}\n                        </ul> */}\n                        <CheckboxTree\n                            nodes={renderCategories(category.categories)}\n                            checked={checked}\n                            expanded={expanded}\n                            onCheck={checked => setChecked(checked)}\n                            onExpand={expanded => setExpanded(expanded)}\n                            icons={{\n                                check: <IoIosCheckbox />,\n                                uncheck: <IoIosCheckboxOutline />,\n                                halfCheck: <IoIosCheckboxOutline />,\n                                expandClose: <IoIosArrowForward />,\n                                expandOpen: <IoIosArrowDown />\n                            }}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n\n            <Modal\n                show={show}\n                handleClose={handleClose}\n                modalTitle={'Add New Category'}\n            >\n\n\n                <Input\n                    value={categoryName}\n                    placeholder={`Category Name`}\n                    onChange={(e) => setCategoryName(e.target.value)}\n                />\n\n                <select\n                    className='form-control'\n                    value={parentCategoryId}\n                    onChange={(e) => setParentCategoryId(e.target.value)}>\n                    <option>select category</option>\n                    {\n                        createCategoryList(category.categories).map(option =>\n                            <option key={option.value} value={option.value}> {option.name}</option>)\n                    }\n                </select>\n\n                <input type=\"file\" name=\"categoryImage\" onChange={handleCategoryImage} />\n\n\n            </Modal>\n\n        </Layout>\n    )\n\n}\n\nexport default Category;"]},"metadata":{},"sourceType":"module"}