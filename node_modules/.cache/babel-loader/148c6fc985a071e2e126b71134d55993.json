{"ast":null,"code":"import axios from \"../helpers/axios\";\nimport { orderConstants } from \"./constants\";\nexport const getCustomerOrders = () => {\n  return async dispatch => {\n    dispatch({\n      type: orderConstants.GET_CUSTOMER_ORDER_REQUEST\n    });\n\n    try {\n      const res = await axios.post('/order/getCustomerOrders');\n\n      if (res.status === 200) {\n        const {\n          orders\n        } = res.data;\n        dispatch({\n          type: orderConstants.GET_CUSTOMER_ORDER_SUCCESS,\n          payload: {\n            orders\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: orderConstants.GET_CUSTOMER_ORDER_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const updateOrder = payload => {\n  return async dispatch => {\n    dispatch({\n      type: orderConstants.UPDATE_CUSTOMER_ORDER_REQUEST\n    });\n\n    try {\n      const res = await axios.post('/order/update', payload);\n      console.log(res);\n\n      if (res.status === 201) {\n        dispatch({\n          type: orderConstants.UPDATE_CUSTOMER_ORDER_SUCCESS\n        });\n        dispatch(getCustomerOrders());\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: orderConstants.UPDATE_CUSTOMER_ORDER_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};","map":{"version":3,"sources":["/Users/gokul/Documents/M/mern-ecommerce/admin-app/src/actions/order.action.js"],"names":["axios","orderConstants","getCustomerOrders","dispatch","type","GET_CUSTOMER_ORDER_REQUEST","res","post","status","orders","data","GET_CUSTOMER_ORDER_SUCCESS","payload","error","GET_CUSTOMER_ORDER_FAILURE","console","log","updateOrder","UPDATE_CUSTOMER_ORDER_REQUEST","UPDATE_CUSTOMER_ORDER_SUCCESS","UPDATE_CUSTOMER_ORDER_FAILURE"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,cAAT,QAA+B,aAA/B;AAGA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AACnC,SAAO,MAAMC,QAAN,IAAkB;AACrBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEH,cAAc,CAACI;AAAvB,KAAD,CAAR;;AACA,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,IAAN,CAAW,0BAAX,CAAlB;;AACA,UAAID,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACpB,cAAM;AAAEC,UAAAA;AAAF,YAAaH,GAAG,CAACI,IAAvB;AACAP,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAEH,cAAc,CAACU,0BADhB;AAELC,UAAAA,OAAO,EAAE;AAAEH,YAAAA;AAAF;AAFJ,SAAD,CAAR;AAIH,OAND,MAMO;AACH,cAAM;AAAEI,UAAAA;AAAF,YAAYP,GAAG,CAACI,IAAtB;AACAP,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAEH,cAAc,CAACa,0BADhB;AAELF,UAAAA,OAAO,EAAE;AAAEC,YAAAA;AAAF;AAFJ,SAAD,CAAR;AAIH;AACJ,KAfD,CAeE,OAAOA,KAAP,EAAc;AACZE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACH;AACJ,GApBD;AAqBH,CAtBM;AAwBP,OAAO,MAAMI,WAAW,GAAIL,OAAD,IAAa;AACpC,SAAO,MAAMT,QAAN,IAAkB;AACrBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEH,cAAc,CAACiB;AAAvB,KAAD,CAAR;;AACA,QAAI;AACA,YAAMZ,GAAG,GAAG,MAAMN,KAAK,CAACO,IAAN,CAAW,eAAX,EAA4BK,OAA5B,CAAlB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYV,GAAZ;;AACA,UAAIA,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACpBL,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAEH,cAAc,CAACkB;AADhB,SAAD,CAAR;AAGAhB,QAAAA,QAAQ,CAACD,iBAAiB,EAAlB,CAAR;AACH,OALD,MAKO;AACH,cAAM;AAAEW,UAAAA;AAAF,YAAYP,GAAG,CAACI,IAAtB;AACAP,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAEH,cAAc,CAACmB,6BADhB;AAELR,UAAAA,OAAO,EAAE;AAAEC,YAAAA;AAAF;AAFJ,SAAD,CAAR;AAIH;AACJ,KAfD,CAeE,OAAOA,KAAP,EAAc;AACZE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACH;AACJ,GApBD;AAqBH,CAtBM","sourcesContent":["import axios from \"../helpers/axios\";\nimport { orderConstants } from \"./constants\";\n\n\nexport const getCustomerOrders = () => {\n    return async dispatch => {\n        dispatch({ type: orderConstants.GET_CUSTOMER_ORDER_REQUEST });\n        try {\n            const res = await axios.post('/order/getCustomerOrders');\n            if (res.status === 200) {\n                const { orders } = res.data;\n                dispatch({\n                    type: orderConstants.GET_CUSTOMER_ORDER_SUCCESS,\n                    payload: { orders }\n                });\n            } else {\n                const { error } = res.data;\n                dispatch({\n                    type: orderConstants.GET_CUSTOMER_ORDER_FAILURE,\n                    payload: { error }\n                });\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nexport const updateOrder = (payload) => {\n    return async dispatch => {\n        dispatch({ type: orderConstants.UPDATE_CUSTOMER_ORDER_REQUEST });\n        try {\n            const res = await axios.post('/order/update', payload);\n            console.log(res);\n            if (res.status === 201) {\n                dispatch({\n                    type: orderConstants.UPDATE_CUSTOMER_ORDER_SUCCESS,\n                });\n                dispatch(getCustomerOrders());\n            } else {\n                const { error } = res.data;\n                dispatch({\n                    type: orderConstants.UPDATE_CUSTOMER_ORDER_FAILURE,\n                    payload: { error }\n                })\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}