{"ast":null,"code":"var _jsxFileName = \"/Users/gokul/Documents/M/mern-ecommerce/admin-app/src/containers/Category/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Layout from '../../components/Layout';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllCategory, addCategory, updateCategories, deleteCategories as deleteCategoriesAction } from '../../actions';\nimport Input from '../../components/UI/Input';\nimport Modal from '../../components/UI/Modal';\nimport CheckboxTree from 'react-checkbox-tree';\nimport { IoIosCheckboxOutline, IoIosCheckbox, IoIosArrowForward, IoIosArrowDown, IoIosTrash, IoIosAdd, IoIosCloudUpload } from 'react-icons/io';\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\nimport UpdateCategoriesModal from './components/UpdateCategoriesModal';\nimport AddCategoryModal from './components/AddCategoryModal';\nimport './style.css';\n/**\n* @author\n* @function Category\n**/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Category = props => {\n  _s();\n\n  const category = useSelector(state => state.category);\n  const [show, setShow] = useState(false);\n  const [categoryName, setCategoryName] = useState('');\n  const [parentCategoryId, setParentCategoryId] = useState('');\n  const [categoryImage, setCategoryImage] = useState('');\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const [checkedArray, setCheckedArray] = useState([]);\n  const [expandedArray, setExpandedArray] = useState([]);\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\n  const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    const form = new FormData();\n\n    if (name === '') {\n      alert('Category name is required');\n      return;\n    }\n\n    form.append('name', categoryName);\n    form.append('parentId', parentCategoryId);\n    form.append('categoryImage', categoryImage);\n    dispatch(addCategory(form));\n    setCategoryName('');\n    setParentCategoryId('');\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const renderCategories = categories => {\n    let myCategories = [];\n\n    for (let category of categories) {\n      myCategories.push({\n        label: category.name,\n        value: category._id,\n        children: category.children.length > 0 && renderCategories(category.children)\n      });\n    }\n\n    return myCategories;\n  };\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name,\n        parentId: category.parentId,\n        type: category.type\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n\n    return options;\n  };\n\n  const handleCategoryImage = e => {\n    setCategoryImage(e.target.files[0]);\n  };\n\n  const updateCategory = () => {\n    updateCheckedAndExpandedCategories();\n    setUpdateCategoryModal(true);\n  };\n\n  const updateCheckedAndExpandedCategories = () => {\n    const categories = createCategoryList(category.categories);\n    const checkedArray = [];\n    const expandedArray = [];\n    checked.length > 0 && checked.forEach((categoryId, index) => {\n      const category = categories.find((category, _index) => categoryId === category.value);\n      category && checkedArray.push(category);\n    });\n    expanded.length > 0 && expanded.forEach((categoryId, index) => {\n      const category = categories.find((category, _index) => categoryId === category.value);\n      category && expandedArray.push(category);\n    });\n    setCheckedArray(checkedArray);\n    setExpandedArray(expandedArray);\n  };\n\n  const handleCategoryInput = (key, value, index, type) => {\n    if (type === 'checked') {\n      const updatedCheckedArray = checkedArray.map((item, _index) => index === _index ? { ...item,\n        [key]: value\n      } : item);\n      setCheckedArray(updatedCheckedArray);\n    } else if (type === 'expanded') {\n      const updatedExpandedArray = expandedArray.map((item, _index) => index === _index ? { ...item,\n        [key]: value\n      } : item);\n      setExpandedArray(updatedExpandedArray);\n    }\n  };\n\n  const updateCategoriesForm = () => {\n    const form = new FormData();\n    expandedArray.forEach((item, index) => {\n      form.append('_id', item.value);\n      form.append('name', item.name);\n      form.append('parentId', item.parentId ? item.parentId : \"\");\n      form.append('type', item.type);\n    });\n    checkedArray.forEach((item, index) => {\n      form.append('_id', item.value);\n      form.append('name', item.name);\n      form.append('parentId', item.parentId ? item.parentId : \"\");\n      form.append('type', item.type);\n    });\n    dispatch(updateCategories(form));\n    setUpdateCategoryModal(false);\n  };\n\n  const deleteCategory = () => {\n    updateCheckedAndExpandedCategories();\n    setDeleteCategoryModal(true);\n  };\n\n  const deleteCategories = () => {\n    const checkedIdsArray = checkedArray.map((item, index) => ({\n      _id: item.value\n    }));\n    const expandedIdsArray = expandedArray.map((item, index) => ({\n      _id: item.value\n    }));\n    const idsArray = expandedIdsArray.concat(checkedIdsArray);\n\n    if (checkedIdsArray.length > 0) {\n      dispatch(deleteCategoriesAction(checkedIdsArray)).then(result => {\n        if (result) {\n          dispatch(getAllCategory()); //setDeleteCategoryModal(false);\n        }\n      });\n      setDeleteCategoryModal(false);\n    }\n  };\n\n  const renderDeleteCategoryModal = () => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      modalTitle: \"confirm\",\n      show: deleteCategoryModal,\n      handleClose: () => setDeleteCategoryModal(false),\n      buttons: [{\n        label: 'no',\n        color: 'primary',\n        onClick: () => {\n          alert('no');\n        }\n      }, {\n        label: 'yes',\n        color: 'danger',\n        onClick: deleteCategories\n      }],\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Expanded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), expandedArray.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 53\n      }, this)), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Checked\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), checkedArray.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 52\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this);\n  };\n\n  const categoryList = createCategoryList(category.categories);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    sidebar: true,\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"actionBtnContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Actions: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleShow,\n                children: [/*#__PURE__*/_jsxDEV(IoIosAdd, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 62\n                }, this), \"Add\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: deleteCategory,\n                children: [/*#__PURE__*/_jsxDEV(IoIosTrash, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 66\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 80\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: updateCategory,\n                children: [/*#__PURE__*/_jsxDEV(IoIosCloudUpload, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 66\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 86\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(CheckboxTree, {\n            nodes: renderCategories(category.categories),\n            checked: checked,\n            expanded: expanded,\n            onCheck: checked => setChecked(checked),\n            onExpand: expanded => setExpanded(expanded),\n            icons: {\n              check: /*#__PURE__*/_jsxDEV(IoIosCheckbox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 40\n              }, this),\n              uncheck: /*#__PURE__*/_jsxDEV(IoIosCheckboxOutline, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 42\n              }, this),\n              halfCheck: /*#__PURE__*/_jsxDEV(IoIosCheckboxOutline, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 44\n              }, this),\n              expandClose: /*#__PURE__*/_jsxDEV(IoIosArrowForward, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 46\n              }, this),\n              expandOpen: /*#__PURE__*/_jsxDEV(IoIosArrowDown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 45\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UpdateCategoriesModal, {\n      show: updateCategoryModal,\n      handleClose: updateCategoriesForm,\n      modalTitle: 'Update Categories',\n      size: \"lg\",\n      expandedArray: expandedArray,\n      checkedArray: checkedArray,\n      handleCategoryInput: handleCategoryInput,\n      categoryList: categoryList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddCategoryModal, {\n      show: show,\n      handleClose: () => setShow(false),\n      onSubmit: handleClose,\n      modalTitle: 'Add New Categories',\n      categoryName: categoryName,\n      setCategoryName: setCategoryName,\n      parentCategoryId: parentCategoryId,\n      setParentCategoryId: setParentCategoryId,\n      categoryList: categoryList,\n      handleCategoryImage: handleCategoryImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }, this), renderDeleteCategoryModal()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Category, \"ixY1qkhtcQZMuqwSKhKmtDbEuJw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Category;\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["/Users/gokul/Documents/M/mern-ecommerce/admin-app/src/containers/Category/index.js"],"names":["React","useEffect","useState","Layout","Container","Row","Col","useDispatch","useSelector","getAllCategory","addCategory","updateCategories","deleteCategories","deleteCategoriesAction","Input","Modal","CheckboxTree","IoIosCheckboxOutline","IoIosCheckbox","IoIosArrowForward","IoIosArrowDown","IoIosTrash","IoIosAdd","IoIosCloudUpload","UpdateCategoriesModal","AddCategoryModal","Category","props","category","state","show","setShow","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","categoryImage","setCategoryImage","checked","setChecked","expanded","setExpanded","checkedArray","setCheckedArray","expandedArray","setExpandedArray","updateCategoryModal","setUpdateCategoryModal","deleteCategoryModal","setDeleteCategoryModal","dispatch","handleClose","form","FormData","name","alert","append","handleShow","renderCategories","categories","myCategories","push","label","value","_id","children","length","createCategoryList","options","parentId","type","handleCategoryImage","e","target","files","updateCategory","updateCheckedAndExpandedCategories","forEach","categoryId","index","find","_index","handleCategoryInput","key","updatedCheckedArray","map","item","updatedExpandedArray","updateCategoriesForm","deleteCategory","checkedIdsArray","expandedIdsArray","idsArray","concat","then","result","renderDeleteCategoryModal","color","onClick","categoryList","display","justifyContent","check","uncheck","halfCheck","expandClose","expandOpen"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Layout from '../../components/Layout';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    getAllCategory,\n    addCategory,\n    updateCategories,\n    deleteCategories as deleteCategoriesAction\n} from '../../actions';\nimport Input from '../../components/UI/Input';\nimport Modal from '../../components/UI/Modal';\nimport CheckboxTree from 'react-checkbox-tree';\nimport {\n    IoIosCheckboxOutline,\n    IoIosCheckbox,\n    IoIosArrowForward,\n    IoIosArrowDown,\n    IoIosTrash,\n    IoIosAdd,\n    IoIosCloudUpload\n} from 'react-icons/io';\n\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\nimport UpdateCategoriesModal from './components/UpdateCategoriesModal';\nimport AddCategoryModal from './components/AddCategoryModal';\nimport './style.css';\n\n/**\n* @author\n* @function Category\n**/\n\nconst Category = (props) => {\n\n    const category = useSelector(state => state.category);\n    const [show, setShow] = useState(false);\n    const [categoryName, setCategoryName] = useState('');\n    const [parentCategoryId, setParentCategoryId] = useState('');\n    const [categoryImage, setCategoryImage] = useState('');\n    const [checked, setChecked] = useState([]);\n    const [expanded, setExpanded] = useState([]);\n    const [checkedArray, setCheckedArray] = useState([]);\n    const [expandedArray, setExpandedArray] = useState([]);\n    const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\n    const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\n    const dispatch = useDispatch();\n\n\n    const handleClose = () => {\n\n        const form = new FormData();\n\n        if(name === '') {\n            alert('Category name is required');\n            return;\n        }\n\n        form.append('name', categoryName);\n        form.append('parentId', parentCategoryId);\n        form.append('categoryImage', categoryImage);\n        dispatch(addCategory(form));\n        setCategoryName('');\n        setParentCategoryId('');\n        setShow(false);\n    }\n\n    const handleShow = () => setShow(true);\n\n\n    const renderCategories = (categories) => {\n\n        let myCategories = [];\n\n        for (let category of categories) {\n\n            myCategories.push(\n                {\n                    label: category.name,\n                    value: category._id,\n                    children: category.children.length > 0 && renderCategories(category.children)\n                }\n            )\n        }\n        return myCategories;\n    }\n\n\n    const createCategoryList = (categories, options = []) => {\n        for (let category of categories) {\n            options.push({ \n                value: category._id, \n                name: category.name, \n                parentId: category.parentId,\n                type: category.type\n             })\n            if (category.children.length > 0) {\n                createCategoryList(category.children, options)\n            }\n        }\n        return options;\n    }\n\n\n    const handleCategoryImage = (e) => {\n        setCategoryImage(e.target.files[0]);\n\n    }\n\n    const updateCategory = () => {\n        updateCheckedAndExpandedCategories();\n        setUpdateCategoryModal(true);\n    }\n\n\n    const updateCheckedAndExpandedCategories = () => {\n        const categories = createCategoryList(category.categories);\n        const checkedArray = [];\n        const expandedArray = [];\n        checked.length > 0 && checked.forEach((categoryId, index) => {\n            const category = categories.find((category, _index) => categoryId === category.value);\n            category && checkedArray.push(category);\n        })\n        expanded.length > 0 && expanded.forEach((categoryId, index) => {\n            const category = categories.find((category, _index) => categoryId === category.value);\n            category && expandedArray.push(category);\n        })\n        setCheckedArray(checkedArray);\n        setExpandedArray(expandedArray);\n    }\n\n\n    const handleCategoryInput = (key, value, index, type) => {\n        if (type === 'checked') {\n            const updatedCheckedArray = checkedArray.map((item, _index) => index === _index ? { ...item, [key]: value } : item);\n            setCheckedArray(updatedCheckedArray);\n        } else if (type === 'expanded') {\n            const updatedExpandedArray = expandedArray.map((item, _index) => index === _index ? { ...item, [key]: value } : item);\n            setExpandedArray(updatedExpandedArray);\n        }\n    }\n\n\n    const updateCategoriesForm = () => {\n\n        const form = new FormData();\n\n        expandedArray.forEach((item, index) => {\n            form.append('_id', item.value);\n            form.append('name', item.name);\n            form.append('parentId', item.parentId ? item.parentId : \"\");\n            form.append('type', item.type);\n        });\n        checkedArray.forEach((item, index) => {\n            form.append('_id', item.value);\n            form.append('name', item.name);\n            form.append('parentId', item.parentId ? item.parentId : \"\");\n            form.append('type', item.type);\n        });\n        dispatch(updateCategories(form));\n        setUpdateCategoryModal(false);\n    }\n\n\n    const deleteCategory = () => {\n        updateCheckedAndExpandedCategories();\n        setDeleteCategoryModal(true);\n    }\n\n    const deleteCategories = () => {\n        const checkedIdsArray = checkedArray.map((item, index) => ({ _id: item.value }));\n        const expandedIdsArray = expandedArray.map((item, index) => ({ _id: item.value }));\n        const idsArray = expandedIdsArray.concat(checkedIdsArray);\n\n        if (checkedIdsArray.length > 0) {\n            dispatch(deleteCategoriesAction(checkedIdsArray))\n                .then(result => {\n                    if (result) {\n                        dispatch(getAllCategory());\n                        //setDeleteCategoryModal(false);\n                    }\n                })\n            setDeleteCategoryModal(false);\n        }\n\n    }\n\n\n    const renderDeleteCategoryModal = () => {\n\n        return (\n            <Modal\n                modalTitle=\"confirm\"\n                show={deleteCategoryModal}\n                handleClose={() => setDeleteCategoryModal(false)}\n                buttons={[\n                    {\n                        label: 'no',\n                        color: 'primary',\n                        onClick: () => {\n                            alert('no');\n                        }\n                    },\n                    {\n                        label: 'yes',\n                        color: 'danger',\n                        onClick: deleteCategories\n                    }\n                ]}\n            >\n\n                <h5>Expanded</h5>\n                {expandedArray.map((item, index) => <span key={index}>{item.name}</span>)}\n                <h5>Checked</h5>\n                {checkedArray.map((item, index) => <span key={index}>{item.name}</span>)}\n\n            </Modal>\n        );\n    }\n\n    const categoryList = createCategoryList(category.categories);\n\n\n    return (\n        <Layout sidebar>\n            <Container>\n                <Row>\n                    <Col md={12}>\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                            <h3>Category</h3>\n                            <div className='actionBtnContainer'>\n                                <span>Actions: </span>\n                                <button onClick={handleShow}>< IoIosAdd />Add</button>\n                                <button onClick={deleteCategory}><IoIosTrash /><span>Delete</span></button>\n                                <button onClick={updateCategory}><IoIosCloudUpload /><span>Edit</span></button>\n\n                            </div>\n\n                        </div>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col md={12}>\n                        {/* <ul>\n                            {renderCategories(category.categories)}\n                        </ul> */}\n                        <CheckboxTree\n                            nodes={renderCategories(category.categories)}\n                            checked={checked}\n                            expanded={expanded}\n                            onCheck={checked => setChecked(checked)}\n                            onExpand={expanded => setExpanded(expanded)}\n                            icons={{\n                                check: <IoIosCheckbox />,\n                                uncheck: <IoIosCheckboxOutline />,\n                                halfCheck: <IoIosCheckboxOutline />,\n                                expandClose: <IoIosArrowForward />,\n                                expandOpen: <IoIosArrowDown />\n                            }}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n            <UpdateCategoriesModal\n\n                show={updateCategoryModal}\n                handleClose={updateCategoriesForm}\n                modalTitle={'Update Categories'}\n                size=\"lg\"\n                expandedArray={expandedArray}\n                checkedArray={checkedArray}\n                handleCategoryInput={handleCategoryInput}\n                categoryList={categoryList}\n            />\n            <AddCategoryModal\n                show={show}\n                handleClose={() => setShow(false)}\n                onSubmit={handleClose}\n                modalTitle={'Add New Categories'}\n                categoryName={categoryName}\n                setCategoryName={setCategoryName}\n                parentCategoryId={parentCategoryId}\n                setParentCategoryId={setParentCategoryId}\n                categoryList={categoryList}\n                handleCategoryImage={handleCategoryImage}\n            />\n            {renderDeleteCategoryModal()}\n        </Layout>\n    )\n}\n\nexport default Category;"]},"metadata":{},"sourceType":"module"}