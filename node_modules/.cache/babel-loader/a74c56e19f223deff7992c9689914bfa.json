{"ast":null,"code":"import { categoryConstants } from \"../actions/constants\";\nconst initialState = {\n  categories: [],\n  loading: false,\n  error: null\n};\n\nconst buildNewCategory = (categories, category) => {\n  let myCategories = [];\n\n  for (let cat of categories) {\n    if (cat.parentId && cat.parentId == id) {\n      myCategories.push({ ...cat,\n        children: cat.children && cat.children.length > 0 ? buildNewCategory(cat.children, category) : []\n      });\n    }\n  }\n\n  return myCategories;\n};\n\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case categoryConstants.GET_ALL_CATEGORY_SUCCESS:\n      state = { ...state,\n        categories: action.payload.categories\n      };\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\n      state = { ...state,\n        loading: true\n      };\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\n      const update = buildNewCategory(state.categories, action.payload.category);\n      console.log(update);\n      state = { ...state,\n        loading: false\n      };\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\n      state = { ...initialState\n      };\n      break;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["/Users/gokul/Documents/M/mern-ecommerce/admin-app/src/reducers/category.reducer.js"],"names":["categoryConstants","initialState","categories","loading","error","buildNewCategory","category","myCategories","cat","parentId","id","push","children","length","state","action","type","GET_ALL_CATEGORY_SUCCESS","payload","ADD_NEW_CATEGORY_REQUEST","ADD_NEW_CATEGORY_SUCCESS","update","console","log","ADD_NEW_CATEGORY_FAILURE"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,sBAAlC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,EADK;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;;AAMA,MAAMC,gBAAgB,GAAG,CAACH,UAAD,EAAaI,QAAb,KAA0B;AAE/C,MAAIC,YAAY,GAAG,EAAnB;;AAEA,OAAK,IAAIC,GAAT,IAAgBN,UAAhB,EAA4B;AAExB,QAAGM,GAAG,CAACC,QAAJ,IAAgBD,GAAG,CAACC,QAAJ,IAAgBC,EAAnC,EAAuC;AAEnCH,MAAAA,YAAY,CAACI,IAAb,CAAkB,EACd,GAAGH,GADW;AAEdI,QAAAA,QAAQ,EAAEJ,GAAG,CAACI,QAAJ,IAAgBJ,GAAG,CAACI,QAAJ,CAAaC,MAAb,GAAsB,CAAtC,GAA0CR,gBAAgB,CAACG,GAAG,CAACI,QAAL,EAAeN,QAAf,CAA1D,GAAqF;AAFjF,OAAlB;AAKH;AAEJ;;AAED,SAAOC,YAAP;AACH,CAlBD;;AAqBA,gBAAe,CAACO,KAAK,GAAGb,YAAT,EAAuBc,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKhB,iBAAiB,CAACiB,wBAAvB;AACIH,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJZ,QAAAA,UAAU,EAAEa,MAAM,CAACG,OAAP,CAAehB;AAFvB,OAAR;AAIA;;AACJ,SAAKF,iBAAiB,CAACmB,wBAAvB;AACIL,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJX,QAAAA,OAAO,EAAE;AAFL,OAAR;AAIA;;AACJ,SAAKH,iBAAiB,CAACoB,wBAAvB;AAEA,YAAMC,MAAM,GAAGhB,gBAAgB,CAACS,KAAK,CAACZ,UAAP,EAAmBa,MAAM,CAACG,OAAP,CAAeZ,QAAlC,CAA/B;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACIP,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJX,QAAAA,OAAO,EAAE;AAFL,OAAR;AAIA;;AACJ,SAAKH,iBAAiB,CAACwB,wBAAvB;AACIV,MAAAA,KAAK,GAAG,EACJ,GAAGb;AADC,OAAR;AAGA;AA1BR;;AA6BA,SAAOa,KAAP;AACH,CA/BD","sourcesContent":["import { categoryConstants } from \"../actions/constants\"\n\nconst initialState = {\n    categories: [],\n    loading: false,\n    error: null\n}\n\nconst buildNewCategory = (categories, category) => {\n\n    let myCategories = [];\n\n    for( let cat of categories) {\n\n        if(cat.parentId && cat.parentId == id) {\n\n            myCategories.push({\n                ...cat,\n                children: cat.children && cat.children.length > 0 ? buildNewCategory(cat.children, category) : []\n            })\n\n        }\n        \n    }\n\n    return myCategories;\n}\n\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case categoryConstants.GET_ALL_CATEGORY_SUCCESS:\n            state = {\n                ...state,\n                categories: action.payload.categories\n            }\n            break;\n        case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\n            state = {\n                ...state,\n                loading: true\n            }\n            break;\n        case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\n\n        const update = buildNewCategory(state.categories, action.payload.category)\n        console.log(update);\n            state = {\n                ...state,\n                loading: false\n            }\n            break;\n        case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\n            state = {\n                ...initialState\n            }\n            break;\n    }\n\n    return state;\n}"]},"metadata":{},"sourceType":"module"}