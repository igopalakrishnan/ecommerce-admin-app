{"ast":null,"code":"var _jsxFileName = \"/Users/gokul/Documents/M/mern-ecommerce/admin-app/src/containers/NewPage/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Layout from '../../components/Layout';\nimport Modal from '../../components/UI/Modal';\nimport Input from '../../components/UI/Input';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport linearCategories from '../../helpers/linearCategories';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createPage } from '../../actions';\n/**\n* @author\n* @function NewPage\n**/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewPage = props => {\n  _s();\n\n  const [createModal, setCreateModal] = useState(false);\n  const [title, setTitle] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [categoryId, setCategoryId] = useState('');\n  const [desc, setDesc] = useState('');\n  const [type, setType] = useState('');\n  const [banners, setBanners] = useState([]);\n  const [products, setProducts] = useState([]);\n  const category = useSelector(state => state.category);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setCategories(linearCategories(category.categories));\n  }, [category]);\n  /* const onCategoryChange = (e) => {\n      const category = categories.find(category => category._id == e.target.value);\n      setCategoryId(e.target.value);\n      setType(category.type);\n  } */\n\n  const handleBannerImages = e => {\n    console.log(e);\n    setBanners([...banners, e.target.files[0]]);\n  };\n\n  const handleProductImages = e => {\n    console.log(e);\n    setProducts([...products, e.target.files[0]]);\n  };\n\n  const submitPageForm = e => {\n    //e.target.preventDeafult();\n    if (title == '') {\n      alert('title is required');\n      setCreateModal(false);\n      return;\n    }\n\n    const form = new FormData();\n    form.append('title', title);\n    form.append('description', desc);\n    form.append('category', categoryId);\n    form.append('type', type);\n    banners.forEach((banner, index) => {\n      form.append('banners', banner);\n    });\n    products.forEach((product, index) => {\n      form.append('products', product);\n    });\n    dispatch(createPage(form)); //console.log({ title, desc, categoryId, type, banners, products});\n  };\n\n  const renderCreatePageModal = () => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: createModal,\n      modalTitle: 'Create New Page',\n      handleClose: submitPageForm,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control form-control-sm\",\n              value: categoryId,\n              onChange: e => setCategoryId(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: cat._id,\n                children: cat.name\n              }, cat._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              value: title,\n              onChange: e => setTitle(e.target.value),\n              placeholder: 'Page Title',\n              className: \"form-control-sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              value: desc,\n              onChange: e => setDesc(e.target.value),\n              placeholder: 'Page Desc',\n              className: \"form-control-sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), banners.length > 0 ? banners.map((banner, index) => /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: banner.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 37\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 33\n        }, this)) : null, /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              className: \"form-control\",\n              type: \"file\",\n              name: \"banners\",\n              onChange: handleBannerImages\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), products.length > 0 ? products.map((product, index) => /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 37\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 33\n        }, this)) : null, /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              className: \"form-control\",\n              type: \"file\",\n              name: \"products\",\n              onChange: handleProductImages\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    sidebar: true,\n    children: [renderCreatePageModal(), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCreateModal(true),\n      children: \"Create Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewPage, \"mYwaY1HQEnxF7H0UTkQJxOKul+I=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = NewPage;\nexport default NewPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPage\");","map":{"version":3,"sources":["/Users/gokul/Documents/M/mern-ecommerce/admin-app/src/containers/NewPage/index.js"],"names":["React","useEffect","useState","Layout","Modal","Input","Row","Col","Container","linearCategories","useDispatch","useSelector","createPage","NewPage","props","createModal","setCreateModal","title","setTitle","categories","setCategories","categoryId","setCategoryId","desc","setDesc","type","setType","banners","setBanners","products","setProducts","category","state","dispatch","handleBannerImages","e","console","log","target","files","handleProductImages","submitPageForm","alert","form","FormData","append","forEach","banner","index","product","renderCreatePageModal","value","map","cat","_id","name","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Layout from '../../components/Layout';\nimport Modal from '../../components/UI/Modal';\nimport Input from '../../components/UI/Input';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport linearCategories from '../../helpers/linearCategories';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createPage } from '../../actions';\n\n\n/**\n* @author\n* @function NewPage\n**/\n\nconst NewPage = (props) => {\n\n    const [createModal, setCreateModal] = useState(false);\n    const [title, setTitle] = useState('');\n    const [categories, setCategories] = useState([]);\n    const [categoryId, setCategoryId] = useState('');\n    const [desc, setDesc] = useState('');\n    const [type, setType] = useState('');\n    const [banners, setBanners] = useState([]);\n    const [products, setProducts] = useState([]);\n    const category = useSelector(state => state.category);\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        setCategories(linearCategories(category.categories));\n    }, [category]);\n\n    /* const onCategoryChange = (e) => {\n        const category = categories.find(category => category._id == e.target.value);\n        setCategoryId(e.target.value);\n        setType(category.type);\n    } */\n\n    const handleBannerImages = (e) => {\n        console.log(e);\n        setBanners([...banners, e.target.files[0]]);\n    }\n\n    const handleProductImages = (e) => {\n        console.log(e);\n        setProducts([...products, e.target.files[0]]);\n    }\n\n    const submitPageForm = (e) => {\n        //e.target.preventDeafult();\n\n        if (title == '') {\n            alert('title is required');\n            setCreateModal(false);\n            return;\n        }\n\n        const form = new FormData();\n        form.append('title', title);\n        form.append('description', desc);\n        form.append('category', categoryId);\n        form.append('type', type);\n        banners.forEach((banner, index) => {\n            form.append('banners', banner);\n        });\n        products.forEach((product, index) => {\n            form.append('products', product);\n        });\n\n        dispatch(createPage(form));\n        //console.log({ title, desc, categoryId, type, banners, products});\n    }\n\n\n    const renderCreatePageModal = () => {\n        return (\n            <Modal\n                show={createModal}\n                modalTitle={'Create New Page'}\n                handleClose={submitPageForm}\n            >\n\n                <Container>\n                    <Row>\n                        <Col>\n                            <select\n                                className='form-control form-control-sm'\n                                value={categoryId}\n                                onChange={(e) => setCategoryId(e.target.value)}\n                            >\n                                <option value=''>Select Category</option>\n                                {\n                                    categories.map((cat) =>\n                                        <option key={cat._id} value={cat._id}>{cat.name}</option>)\n                                }\n\n                            </select>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <Input\n                                value={title}\n                                onChange={(e) => setTitle(e.target.value)}\n                                placeholder={'Page Title'}\n                                className='form-control-sm'\n                            />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <Input\n                                value={desc}\n                                onChange={(e) => setDesc(e.target.value)}\n                                placeholder={'Page Desc'}\n                                className='form-control-sm'\n                            />\n                        </Col>\n                    </Row>\n\n                    {\n                        banners.length > 0 ?\n                            banners.map((banner, index) =>\n                                <Row key={index}>\n                                    <Col>{banner.name}</Col>\n                                </Row>\n                            ) : null\n                    }\n\n                    <Row>\n                        <Col>\n                            <Input\n                                className='form-control'\n                                type='file'\n                                name='banners'\n                                onChange={handleBannerImages}\n                            />\n                        </Col>\n                    </Row>\n\n                    {\n                        products.length > 0 ?\n                            products.map((product, index) =>\n                                <Row key={index}>\n                                    <Col>{product.name}</Col>\n                                </Row>\n                            ) : null\n                    }\n\n                    <Row>\n                        <Col>\n                            <Input\n                                className='form-control'\n                                type='file'\n                                name='products'\n                                onChange={handleProductImages}\n                            />\n                        </Col>\n                    </Row>\n\n\n                </Container>\n\n            </Modal>\n        );\n    }\n    return (\n        <Layout sidebar>\n            {renderCreatePageModal()}\n            <button onClick={() => setCreateModal(true)}>Create Page</button>\n        </Layout>\n    )\n\n}\n\nexport default NewPage;"]},"metadata":{},"sourceType":"module"}