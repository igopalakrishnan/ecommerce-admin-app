{"ast":null,"code":"var _jsxFileName = \"/Users/gokul/Documents/M/mern-ecommerce/admin-app/src/containers/NewPage/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Layout from '../../components/Layout';\nimport Modal from '../../components/UI/Modal';\nimport Input from '../../components/UI/Input';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport linearCategories from '../../helpers/linearCategories';\nimport { useSelector } from 'react-redux';\n/**\n* @author\n* @function NewPage\n**/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewPage = props => {\n  _s();\n\n  const [createModal, setCreateModal] = useState(false);\n  const [title, setTitle] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [categoryId, setCategoryId] = useState('');\n  const [desc, setDesc] = useState('');\n  const [type, setType] = useState('');\n  const [banners, setBanners] = useState([]);\n  const [products, setProducts] = useState([]);\n  const category = useSelector(state => state.category);\n  useEffect(() => {\n    setCategories(linearCategories(category.categories));\n  }, [category]);\n\n  const onCategoryChange = e => {\n    const category = categories.find(category => category._id == e.target.value);\n    setCategoryId(e.target.value);\n    setType(category.type);\n  };\n\n  const handleBannerImages = e => {\n    console.log(e);\n    setBanners([...banners, e.target.files[0]]);\n  };\n\n  const handleProductImages = e => {\n    console.log(e);\n    setProducts([...products, e.target.files[0]]);\n  };\n\n  const submitPageForm = e => {\n    e.target.preventDeafult();\n\n    if (title == '') {\n      alert('title is required');\n      setCreateModal(false);\n      return;\n    }\n\n    const form = new FormData();\n    form.append('title', title);\n    form.append('description', description);\n    form.append('category', categoryId);\n    form.append('type', type);\n    banners.forEach((banner, index) => {\n      form.append('banners', banner);\n    });\n    products.forEach((product, index) => {\n      form.append('products', product);\n    });\n    console.log(title, description, category, type, banners, producs);\n  };\n\n  const renderCreatePageModal = () => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: createModal,\n      modalTitle: 'Create New Page',\n      handleClose: submitPageForm,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control form-control-sm\",\n              value: categoryId,\n              onChange: onCategoryChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: cat._id,\n                children: cat.name\n              }, cat._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              value: title,\n              onChange: e => setTitle(e.target.value),\n              placeholder: 'Page Title',\n              className: \"form-control-sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              value: desc,\n              onChange: e => setDesc(e.target.value),\n              placeholder: 'Page Desc',\n              className: \"form-control-sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), banners.length > 0 ? banners.map((banner, index) => /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: banner.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 33\n        }, this)) : null, /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              className: \"form-control\",\n              type: \"file\",\n              name: \"banners\",\n              onChange: handleBannerImages\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), products.length > 0 ? products.map((product, index) => /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 33\n        }, this)) : null, /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              className: \"form-control\",\n              type: \"file\",\n              name: \"products\",\n              onChange: handleProductImages\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    sidebar: true,\n    children: [renderCreatePageModal(), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCreateModal(true),\n      children: \"Create Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewPage, \"EhhHmdFdinLsdRCRynWbaAdj8uA=\", false, function () {\n  return [useSelector];\n});\n\n_c = NewPage;\nexport default NewPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPage\");","map":{"version":3,"sources":["/Users/gokul/Documents/M/mern-ecommerce/admin-app/src/containers/NewPage/index.js"],"names":["React","useEffect","useState","Layout","Modal","Input","Row","Col","Container","linearCategories","useSelector","NewPage","props","createModal","setCreateModal","title","setTitle","categories","setCategories","categoryId","setCategoryId","desc","setDesc","type","setType","banners","setBanners","products","setProducts","category","state","onCategoryChange","e","find","_id","target","value","handleBannerImages","console","log","files","handleProductImages","submitPageForm","preventDeafult","alert","form","FormData","append","description","forEach","banner","index","product","producs","renderCreatePageModal","map","cat","name","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Layout from '../../components/Layout';\nimport Modal from '../../components/UI/Modal';\nimport Input from '../../components/UI/Input';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport linearCategories from '../../helpers/linearCategories';\nimport { useSelector } from 'react-redux';\n\n\n/**\n* @author\n* @function NewPage\n**/\n\nconst NewPage = (props) => {\n\n    const [createModal, setCreateModal] = useState(false);\n    const [title, setTitle] = useState('');\n    const [categories, setCategories] = useState([]);\n    const [categoryId, setCategoryId] = useState('');\n    const [desc, setDesc] = useState('');\n    const [type, setType] = useState('');\n    const [banners, setBanners] = useState([]);\n    const [products, setProducts] = useState([]);\n    const category = useSelector(state => state.category);\n\n\n    useEffect(() => {\n        setCategories(linearCategories(category.categories));\n    }, [category]);\n\n    const onCategoryChange = (e) => {\n        const category = categories.find(category => category._id == e.target.value);\n        setCategoryId(e.target.value);\n        setType(category.type);\n    }\n\n    const handleBannerImages = (e) => {\n        console.log(e);\n        setBanners([...banners, e.target.files[0]]);\n    }\n\n    const handleProductImages = (e) => {\n        console.log(e);\n        setProducts([...products, e.target.files[0]]);\n    }\n\n    const submitPageForm = (e) => {\n        e.target.preventDeafult();\n\n        if(title == '') {\n            alert('title is required');\n            setCreateModal(false);\n            return;\n        }\n\n        const form = new FormData();\n        form.append('title', title);\n        form.append('description', description);\n        form.append('category', categoryId);\n        form.append('type',type);\n        banners.forEach((banner, index) => {\n            form.append('banners', banner);\n        });\n        products.forEach((product, index) => {\n            form.append('products', product);\n        });\n\n        console.log(title, description, category, type, banners, producs);\n    }\n\n\n    const renderCreatePageModal = () => {\n        return (\n            <Modal\n                show={createModal}\n                modalTitle={'Create New Page'}\n                handleClose={submitPageForm}\n            >\n\n                <Container>\n                    <Row>\n                        <Col>\n                            <select\n                                className='form-control form-control-sm'\n                                value={categoryId}\n                                onChange={onCategoryChange}\n                            >\n                                <option value=''>Select Category</option>\n                                {\n                                    categories.map((cat) =>\n                                        <option key={cat._id} value={cat._id}>{cat.name}</option>)\n                                }\n\n                            </select>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <Input\n                                value={title}\n                                onChange={(e) => setTitle(e.target.value)}\n                                placeholder={'Page Title'}\n                                className='form-control-sm'\n                            />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <Input\n                                value={desc}\n                                onChange={(e) => setDesc(e.target.value)}\n                                placeholder={'Page Desc'}\n                                className='form-control-sm'\n                            />\n                        </Col>\n                    </Row>\n\n                    {\n                        banners.length > 0 ?\n                            banners.map((banner, index) =>\n                                <Row>\n                                    <Col>{banner.name}</Col>\n                                </Row>\n                            ) : null\n                    }\n\n                    <Row>\n                        <Col>\n                            <Input\n                                className='form-control'\n                                type='file'\n                                name='banners'\n                                onChange={handleBannerImages}\n                            />\n                        </Col>\n                    </Row>\n\n                    {\n                        products.length > 0 ?\n                            products.map((product, index) =>\n                                <Row>\n                                    <Col>{product.name}</Col>\n                                </Row>\n                            ) : null\n                    }\n\n                    <Row>\n                        <Col>\n                            <Input\n                                className='form-control'\n                                type='file'\n                                name='products'\n                                onChange={handleProductImages}\n                            />\n                        </Col>\n                    </Row>\n\n\n                </Container>\n\n            </Modal>\n        );\n    }\n    return (\n        <Layout sidebar>\n            {renderCreatePageModal()}\n            <button onClick={() => setCreateModal(true)}>Create Page</button>\n        </Layout>\n    )\n\n}\n\nexport default NewPage;"]},"metadata":{},"sourceType":"module"}